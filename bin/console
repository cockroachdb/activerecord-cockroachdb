#!/usr/bin/env ruby

$:.unshift(File.expand_path("../lib", __dir__))

# require "bundler/setup"
# Bundler.require :development

require "active_record"
# This allows playing with the rake task as well. Ex:
#
#     ActiveRecord::Tasks::DatabaseTasks.
#       structure_load(Post.connection_db_config, "awesome-file.sql")
require "active_record/connection_adapters/cockroachdb/database_tasks"

begin
  retried = false
  ActiveRecord::Base.establish_connection(
    #Alternative version:  "cockroachdb://root@localhost:26257/ar_crdb_console"
    adapter: "cockroachdb",
    host: "localhost",
    port: 26257,
    user: "root",
    database: "ar_crdb_console"
  )
  ActiveRecord::Base.connection
rescue ActiveRecord::NoDatabaseError
  raise if retried
  system("cockroach sql --insecure --host=localhost:26257 --execute='create database ar_crdb_console'",
    exception: true)
  retried = true
  retry
end

class Post < ActiveRecord::Base
end

unless Post.table_exists?
  migration = Class.new(ActiveRecord::Migration::Current) do
    def up
      create_table("posts") do |t|
        t.string :title
        t.text :body
      end
    end
  end
  migration.migrate(:up)
end

require "irb"
IRB.start(__FILE__)
